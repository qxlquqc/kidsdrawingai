# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# env files (can opt-in for committing if needed)
.env*

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts

# ===========================================
# 🚫 项目特定的忽略文件 - 不需要上传到生产环境
# ===========================================

# 💾 环境配置文件
.env.local 

# 📚 开发文档和笔记（本地保留，不上传）
开发.txt                        # 开发笔记
开发总.txt                      # 开发总结文档
开发中.txt                      # 开发中的临时笔记
登录实现注意.txt                 # 登录功能实现笔记
supabase doc.txt                # Supabase文档笔记
cankao_raphael                  # 参考资料目录

# 📄 API文档和变更记录（本地保留，不上传）
api schema json.txt             # API schema文档
变更为api schema json.txt       # API schema变更记录
原api schema json.txt           # 原始API schema
Creem api webhook.md            # Creem支付API文档
supabase-setup-log.md          # Supabase设置日志

# 🔧 测试和调试脚本（本地保留，生产环境不需要）
# 这些工具用于本地开发调试，不应部署到生产环境
test-webhook.js                 # webhook测试脚本
debug-webhook.js               # webhook调试脚本
create-test-user.js            # 创建测试用户脚本
check-recent-refunds.js        # 检查退款记录脚本
quick-check.js                 # 快速数据检查脚本
check-db.js                    # 数据库状态检查脚本

# 📁 测试页面和API（本地保留，生产环境不需要）
app/test-webhook/              # 测试支付链接的前端页面
app/api/test-*/                # 所有测试API接口
app/api/debug-*/               # 所有调试API接口

# 🛠️ 通用测试和调试文件模式
**/test-*.js                   # 所有test-开头的JS文件
**/test-*.ts                   # 所有test-开头的TS文件
**/debug-*.js                  # 所有debug-开头的JS文件
**/debug-*.ts                  # 所有debug-开头的TS文件

# ===========================================
# ✅ 以上文件在本地保留，便于开发调试
# ✅ 但不会上传到Git仓库和生产环境
# ✅ 确保生产部署的干净和安全
# ===========================================
